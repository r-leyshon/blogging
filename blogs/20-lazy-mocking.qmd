---
title: "Lazy Mocking"
author: "Rich Leyshon"
date: "November 04 2024"
description: "Using Fixtures to Mock With Deferred Evaluation"
categories:
    - Explanation
    - pytest
    - Unit tests
    - mocking
    - pytest-in-plain-english
    - patching
    - lazy
    - lazy evaluation
image: https://i.imgur.com/H2ljge8.jpeg
image-alt: "The Joker Taking a Nap."
toc: true
css: /./www/17-quarto-comments/styles.css
---
 <img class=shaded_box src=https://i.imgur.com/H2ljge8.jpeg alt="The Joker Taking a Nap." style="display:block;margin-left:auto;margin-right:auto;width:60%;border:none;">

> "Time to live  
> Time to lie  
> Time to laugh  
> Time to die  
> Take it easy, baby  
> Take it as it comes" Take It As It Comes, The Doors.

## Introduction

A simple approach to sharing a fixture across multiple tests where mocking is a
requirement.

### Intended Audience

Python Developers, test engineers & the intersection of the two.

### Requirements

`pip install pytest`

## Some Source Code

This little function would cause a problem when writing your test suite:
```{python filename=poem.py}
from datetime import datetime

def get_poem_line_for_day():
    """Returns the line of the poem based on the current day of the week."""
    day_of_week = datetime.today().strftime('%A')
    POEM = {
        "Monday": "Monday's child is fair of face",
        "Tuesday": "Tuesday's child is full of grace",
        "Wednesday": "Wednesday's child is full of woe",
        "Thursday": "Thursday's child has far to go",
        "Friday": "Friday's child is loving and giving",
        "Saturday": "Saturday's child works hard for his living",
        "Sunday": "And the child that is born on the Sabbath day is bonny and blithe, and good and gay",
    }
    return POEM.get(day_of_week, "Unknown day")

get_poem_line_for_day()

```

::: {.callout collapse="true"}

### Why would this be hard to test without mocking? (Click for the answer)

* The function will return different strings depending on the day the test is
run.
* Without mocking `get_poem_line_for_day`, you would have to update hard-coded
test predicates to match the current day of the week. Nope.
* In CI, avoiding mocking would likely result in setting a variable equal to
the current day of the week and basing your test predicates off of that. Nope.
* Let's instead patch the values...

:::

## Summary

...

Please feel free to share your own thoughts and ideas in the comment
section below (GitHub login required)! If you spot an error with this
article, or have a suggested improvement then feel free to 
[raise an issue on GitHub](https://github.com/r-leyshon/blogging/issues). 

<p id=fin><i>fin!</i></p>
