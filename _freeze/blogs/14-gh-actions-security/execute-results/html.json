{
  "hash": "85bec8d107085164e718e29996f3dbcd",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: GitHub Actions Security\nauthor: Rich Leyshon\ndate: June 26 2024\ndescription: Plain English Discussion of Pytest Parametrize\ncategories:\n  - How-to\n  - GitHub\n  - GitHub Actions\n  - 'CI:CD'\n  - Security\nimage: 'https://i.imgur.com/bPIGcZh.jpg'\nimage-alt: An android locking a high security vault door.\ntoc: true\ncss: /www/13-pytest-parametrize/styles.css\n---\n\n<figure class=center >\n  <img class=\"shaded_box\" width=400px src=\"https://i.imgur.com/bPIGcZh.jpg\"></img>\n  <figcaption>An android locking a high security vault door.</figcaption>\n</figure>\n\n## TL;DR\n\nIt's more secure to use reference GitHub Actions written by others by referring\nto the commit hash of the code than the version. Particularly if the action\nrequires access to a secret credential. For example:\n\n```{.yaml filename=\"upload-codecov.yml\"}\nsteps:\n- uses: actions/checkout@main\n- uses: codecov/codecov-action@v4\n  with:\n    token: ${{ secrets.CODECOV_TOKEN }} # required\n```\n\n...is better referenced like below:\n\n```{.yaml filename=\"upload-codecov.yml\"}\nsteps:\n- uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # sha for v4.1.7\n- uses: codecov/codecov-action@af2ee03a4e3e11499d866845a1e6c5a11f85cf4e # sha v4.5.0 \n  with:\n    token: ${{ secrets.CODECOV_TOKEN }} # required\n```\n\n## Background\n\n* Open source projects have been subject to a number of\n[social engineering attacks][openjs] recently. \n* This [blog post][julienrenaux] describes risk in relying on GitHub Actions\nwritten by others.\n\n## The Risk in Plain English\n\n1. Developers use [GitHub actions][marketplace] to conveniently automate\nvarious tasks.\n2. Some of these actions require access to secret credentials, for example to\npublish code to services in the cloud.\n3. Many of these actions are widely adopted in the open source community,\nhandling thousands of secrets every day.\n4. There is a risk that bad actors could gain access to these codebases by\nplacing pressure upon the package maintainers.\n5. Once a bad actor has access to such a repo, they are able to adjust the code\nassociated with the version reference, to do something nefarious, such as\nharvest your secret credentials.\n6. Updating workflow files to reference the actions by commit hash guarantees\nthat this code can be trusted to 'do what it says on the tin' in the future.\n\n## Likelihood and Severity\n\nThe likelihood of this risk is debateable, but it is not zero.\n\nThe community of developers would likely pick up on such an event quickly and\nmany of the targetted action's users would benefit from this awareness before\nan event that would trigger the action that would result in a data breach. \n\nThe severity of such an event would relate to the nature of the targetted\naction. If the targetted action intercepted cloud service credentials, such as\nthat required for deployment to GCP, AWS and the like, then the severity could\nbe high. Whereas targetting widely used actions such as the checkout action\nwould present differing severities for open or closed repositories that use\nthese actions.\n\nAs the effort needed to mitigate this risk is very small, I would encourage\nGitHub Actions users to consider updating all repositories that make use of\nsuch actions for their continuous deployment workflows. \n\nIn support of this suggested mitigation, here you can see that the\nwell-known python package [`numpy`][numpy] have adopted the approach.\n\n\n## Updating Your Workflow Files\n\n1. Find the action that you wish to use on GitHub and click on its banner to\nnavigate to the action's homepage.\n\n![The GitHub Actions marketplace](https://i.imgur.com/4G5qba2.png)\n\n2. Ensure that you have identified the correct action by checking the author\nand the number of stars. Click on the link shown to navigate to the action's\nrepository.\n\n![The Codecov action homepage](https://i.imgur.com/tcBYkpy.png)\n\n3. Consult the readme and releases section to identify the latest version of\nthe action. Ensure that the appropriate branch is selected from the branch\nselector widget.\n\n![Checking the selected branch](https://i.imgur.com/eVU7ce5.png)\n\n4. Once you have selected the appropriate branch for the latest release, click\non the commits section.\n\n![Click on the commits](https://i.imgur.com/5jQWlQs.png)\n\n5. From the list of commits, select the commit associated with the latest\nrelease and click the copy button to copy the full commit reference to your\nclipboard.\n\n![Copy the full commit sha](https://i.imgur.com/8NVX30Y.png)\n\n6. Replace the version reference in your workflow file with your copied commit\nreference. \n\n## Acknowledgements\n\nThanks to Mat for the conversation about recent bad actor efforts on various\nwell-known open source repositories.\n\n<p id=fin><i>fin!</i></p>\n\n[openjs]: https://openjsf.org/blog/openssf-openjs-alert-social-engineering-takeovers\n[julienrenaux]: https://julienrenaux.fr/2019/12/20/github-actions-security-risk/\n[marketplace]: https://github.com/marketplace?type=actions\n[numpy]: https://github.com/numpy/numpy/blob/main/.github/workflows/wheels.yml\n\n",
    "supporting": [
      "14-gh-actions-security_files"
    ],
    "filters": [],
    "includes": {}
  }
}