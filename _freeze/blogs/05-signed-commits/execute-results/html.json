{
  "hash": "243289ecb2464bd365c08c01e2f4aaff",
  "result": {
    "markdown": "---\ntitle: \"Set Up Signed Commits on GitHub\"\nauthor: \"Rich Leyshon\"\ndate: last-modified\ndescription: \"A quick guide to setting up commit verification using a GPG key.\"\ncategories:         # delete categories as appropriate. using https://diataxis.fr/ documentation definitions.\n    - How-to\n    - GitHub\n    - Authentication\n    - Verification\nimage: /./www/05-signed-commits/verified-badge.png\nimage-alt: \"GitHub verification badge.\"\ntoc: true \nexecute: \n  eval: false # use code blocks with copy options but don't run the code\nformat:\n  html:\n    mermaid:\n      theme: default\n---\n\n<figure class=center>\n  <img class=\"shaded_box\" src=\"/./www/05-signed-commits/verified-badge.png\"></img>\n  <figcaption>GitHub verification badge.</figcaption>\n</figure>\n\n## Acknowledgement\n\nThis article merely collates information from the following sources:\n\n1. [Adding a GPG key to your GitHub account](https://docs.github.com/en/authentication/managing-commit-signature-verification/adding-a-gpg-key-to-your-github-account)\n2. [Generating a new GPG key](https://docs.github.com/en/authentication/managing-commit-signature-verification/generating-a-new-gpg-key)\n3. [How to understand the `gpg failed to sign the data` problem in git](https://gist.github.com/paolocarrasco/18ca8fe6e63490ae1be23e84a7039374)\n\nFor more information and troubleshooting, please visit these sources as they\ncontain additional guidance which may be helpful for operating systems other\nthan macos.\n\n## The Scenario\n\nYou need to set up commit verification on your computer for the first time.\nPossibly you have changed computer and need to quickly set up once more. You\nare on macos with access to yout terminal.\n\n## What you'll need:\n\n- [ ] macos\n- [ ] Your GitHub username\n- [ ] The Email address associated with your GitHub account\n- [ ] Access to the command line via Command Line Interface (CLI)\n\n## Instructions\n\n1. In terminal, run `git config --global commit.gpgsign true`\n2. Visit [GPG suite](https://gpgtools.org/) and download the installer. \n3. Follow the installation steps and quit the screen that attempts to create a\nnew key\n4. In terminal, create a key with `gpg --full-generate-key`\n5. At the prompt, accept the default values for key type, size and persistence\n6. Ensure you enter your GitHub username (labelled here as real name) and the\nEmail associated with your account correctly\n7. Enter a passphrase, confirm it and store it in a secure password wallet. You\nwill need it again in the final step of this process.\n8. Print out the long format of the key details with :\n`gpg --list-secret-keys --keyid-format=long`\n9. Copy the long form of the key ID from the example output labelled as\n`<COPY THIS BIT ONLY>`, do not include the preceeding forward slash:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n$ gpg --list-secret-keys --keyid-format=long\n/Users/hubot/.gnupg/secring.gpg\n------------------------------------\nsec   XXXX/<COPY THIS BIT ONLY> 2023-10-23 \nuid                          your username\nssb   xxxXXXX/XXXXXXXXXXXXXXXX 2023-10-23\n```\n:::\n\n\n10. Adjust this command with your copied key ID and run in terminal;\n`git config --global user.signingkey <INSERT YOUR KEY>`\n11. Paste your key into the command below and execute in terminal: \n`gpg --armor --export XXXXXXXXXXXXXXXXXXXX`\n11. Copy the output, including the `-----BEGIN PGP PUBLIC KEY BLOCK-----`  and\n`-----END PGP PUBLIC KEY BLOCK-----` sections.\n12. Go to the GPG Keychain app, it should have detected the key in your\nclipboard and ask you to import the key to your keychain. Click OK.\n13. Over to your web brower, go to GitHub -> profile pic -> settings\n-> SSH and GPG keys\n14. Add a new key to your account, give it an appropriate title and paste the\nkey from your clipboard.\n15. GitHub will ask you to authenticate in order to make this change.\n16. The next time you need to commit, you will be asked to enter the passphrase\nyou saved to your password wallet in order to add the key to your keychain.\n\n<p id=fin><i>fin!</i></p>\n\n",
    "supporting": [
      "05-signed-commits_files"
    ],
    "filters": [],
    "includes": {}
  }
}